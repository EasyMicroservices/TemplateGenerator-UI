@using EasyMicroservices.UI.Cores
@using EasyMicroservices.UI.TemplateGenerator.ViewModels.FormItems
@using EasyMicroservices.UI.TemplateGenerator.ViewModels.Generators
@using MudBlazor
@using TemplateGenerators.GeneratedServices
@inject FormItemsViewModel viewModel;

<MudRTLProvider RightToLeft="BaseViewModel.IsRightToLeft">
    <MudSelect @bind-Value="viewModel.SelectedFormItem" Label="@viewModel.GetInnerTranslatedByKey("FormItem")" OpenIcon="@Icons.Material.Filled.LocalDrink" AdornmentColor="Color.Secondary">
        @foreach (var item in viewModel.FormItems)
        {
            <MudSelectItem Value="@item">@item.Title</MudSelectItem>
        }
    </MudSelect>
</MudRTLProvider>

@code {
    public FormItemsViewModel ViewModel
    {
        get
        {
            return viewModel;
        }
    }

    protected override void OnInitialized()
    {
        ViewModel.BindSpecifiedPropertyChanged(nameof(FormItemsViewModel.SelectedFormItem), () =>
        {
            SelectedFormItemChanged.InvokeAsync(SelectedFormItem);
        });
        base.OnInitialized();
    }

    [Parameter]
    [Category(CategoryTypes.FormComponent.Data)]
    public FormItemContract SelectedFormItem
    {
        get
        {
            return ViewModel.SelectedFormItem;
        }
        set
        {
            ViewModel.SelectedFormItem = value;
        }
    }

    [Parameter]
    public EventCallback<FormItemContract> SelectedFormItemChanged { get; set; }
}
