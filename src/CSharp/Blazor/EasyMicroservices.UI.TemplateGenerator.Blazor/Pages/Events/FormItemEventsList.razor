@using EasyMicroservices.UI.BlazorComponents
@using EasyMicroservices.UI.Cores
@using EasyMicroservices.UI.TemplateGenerator.ViewModels.Events
@using EasyMicroservices.UI.TemplateGenerator.ViewModels.Generators
@using MudBlazor
@using TemplateGenerators.GeneratedServices
@inject FormItemEventsListViewModel viewModel;

<MudRTLProvider RightToLeft="BaseViewModel.IsRightToLeft">
    <MudDataGrid T="FormItemEventContract" Items="viewModel.FormItemEvents">
        <ToolBarContent>
            <MudStack AlignItems="AlignItems.Center" Row="true" Spacing="5">
                <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" OnClick="(arg) => ShowAddFormItemEventDialog()" />
            </MudStack>
        </ToolBarContent>
        <Columns>
            <PropertyColumn Property="x => x.Event.Name" Title="@viewModel.GetLanguage("Event")" />
            @*             <TemplateColumn CellClass="d-flex justify-end">
            <CellTemplate>
            <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="(arg) => ShowUpdateFormItemItemDialog(context.Item)" />
            <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Delete" Color="Color.Error" OnClick="(arg) => ShowDeleteDialog(context.Item)" />
            </CellTemplate>
            </TemplateColumn> *@
        </Columns>
    </MudDataGrid>
    <BaseDialog @ref="addDialog">
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.Edit" Class="mr-3" /> Add
            </MudText>
        </TitleContent>
        <DialogContent>
            <AddOrUpdateFormItemEvent @ref="AddOrUpdateFormItemEventView" />
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="() => addDialog.CloseDialog()">
                @viewModel.GetLanguage("Cancel")
            </MudButton>
            <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="()=>Save()">
                <MudText>
                    @viewModel.GetLanguage("Save")
                </MudText>
            </MudButton>
        </DialogActions>
    </BaseDialog>
</MudRTLProvider>

@code {
    public FormItemEventsListViewModel ViewModel
    {
        get
        {
            return viewModel;
        }
    }

    [Parameter]
    [Category("Behavior")]
    public FormItemEventContract SelectedFormItemEvent
    {
        get
        {
            return ViewModel.SelectedFormItemEvent;
        }
        set
        {
            ViewModel.SelectedFormItemEvent = value;
        }
    }

    AddOrUpdateFormItemEvent AddOrUpdateFormItemEventView;
    BaseDialog addDialog;
    void ShowAddFormItemEventDialog()
    {
        addDialog.ShowDialog(() =>
        {
            // AddOrUpdateFormItemEventView.ViewModel.Clear();
            // AddOrUpdateFormItemEventView.ViewModel.OnSuccess = (contract) =>
            // {
            //     viewModel.FormItems.Add(contract);
            //     addDialog.CloseDialog();
            //     Snackbar.Add("ثبت با موفقیت انجام شد.", Severity.Success);
            //     viewModel.OrderingFormItems.ReOrderIndexes();
            //     StateHasChanged();
            // };
        });
    }

    void Save()
    {
        if (AddOrUpdateFormItemEventView.SelectedEvent != null)
        {
            ViewModel.FormItemEvents.Add(AddOrUpdateFormItemEventView.ViewModel.GetFormItemEvent());
            addDialog.CloseDialog();
        }
    }
}
