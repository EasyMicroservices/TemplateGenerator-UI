@using EasyMicroservices.UI.Cores
@using EasyMicroservices.UI.TemplateGenerator.Blazor.Interfaces
@using EasyMicroservices.UI.TemplateGenerator.ViewModels.Generators
@using EasyMicroservices.UI.TemplateGenerator.ViewModels.Generators.Components
@using MudBlazor
@using TemplateGenerators.GeneratedServices
@inject CardFormItemViewModel viewModel;
@inject IComponentPool ComponentPool;
@implements IParentComponent

<MudRTLProvider RightToLeft="BaseViewModel.IsRightToLeft">
    <FormItemListGenerator @ref="Control" FormItem="@viewModel.FormItem"/>
</MudRTLProvider>

@code {
    public CardFormItemViewModel ViewModel
    {
        get
        {
            return viewModel;
        }
    }

    [Parameter]
    [Category("Behavior")]
    public FormItemContract FormItem
    {
        set
        {
            viewModel.FormItem = value;
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (Parent != null && viewModel.FormItem != null)
            ComponentPool.SetParent(Parent, this, viewModel.FormItem);

        if (viewModel.FormItem != null && Control != null)
        {
            Control.Parent = this;
            ComponentPool.SetParent(this, Control, viewModel.FormItem);
        }
    }

    public IParentComponent Control { get; set; }
    public IParentComponent Parent { get; set; }

    public object ValueInstance
    {
        get
        {
            return viewModel.FormItem;
        }
    }
}
