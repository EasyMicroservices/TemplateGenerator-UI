@using EasyMicroservices.UI.Cores
@using EasyMicroservices.UI.TemplateGenerator.Blazor.Pages.Generators.Components
@using EasyMicroservices.UI.TemplateGenerator.ViewModels.Generators
@using MudBlazor
@using TemplateGenerators.GeneratedServices
@inject FormItemSingleItemGeneratorViewModel viewModel;

<MudRTLProvider RightToLeft="BaseViewModel.IsRightToLeft">
    @if (viewModel.FormItem?.Type == ItemType.TextBox)
    {
        <TextBoxFormItem FormItem="@viewModel.FormItem" />
    }
    else if (viewModel.FormItem?.Type == ItemType.OptionList)
    {
        <SingleSelectFormItem FormItem="@viewModel.FormItem" />
    }
    else if (viewModel.FormItem?.Type == ItemType.DateOnly)
    {
        <DateOnlyFormItem FormItem="@viewModel.FormItem" />
    }
    else if (viewModel.FormItem?.Type == ItemType.Card)
    {
        <CardFormItem FormItem="@viewModel.FormItem" />
    }
    else if (viewModel.FormItem?.Type == ItemType.Button)
    {
        <ButtonFormItem FormItem="@viewModel.FormItem" />
    }
    else if (viewModel.FormItem?.Type == ItemType.HorizontalStack)
    {
        <HorizontalStackFormItem FormItem="@viewModel.FormItem" />
    }
    else if (viewModel.FormItem?.Type == ItemType.VerticalStack)
    {
        <VerticalStackFormItem FormItem="@viewModel.FormItem" />
    }
    else if (viewModel.FormItem?.Type == ItemType.CheckBox)
    {
        <CheckBoxFormItem FormItem="@viewModel.FormItem" />
    }
    else if (viewModel.FormItem?.Type == ItemType.CheckList)
    {
        <MultipleSelectFormItem FormItem="@viewModel.FormItem" />
    }
    else if (viewModel.FormItem?.Type == ItemType.Label)
    {
        <LabelFormItem FormItem="@viewModel.FormItem" />
    }
    else if (viewModel.FormItem?.Type == ItemType.DateTime)
    {
        <DateTimeFormItem FormItem="@viewModel.FormItem" />
    }
    else if (viewModel.FormItem?.Type == ItemType.TimeOnly)
    {
        <TimeOnlyFormItem FormItem="@viewModel.FormItem" />
    }
    else if (viewModel.FormItem?.Type == ItemType.Table)
    {
        <DataGridFormItem FormItem="@viewModel.FormItem" />
    }
</MudRTLProvider>

@code {
    public FormItemSingleItemGeneratorViewModel ViewModel
    {
        get
        {
            return viewModel;
        }
    }

    [Parameter]
    [Category("Behavior")]
    public FormItemContract FormItem
    {
        set
        {
            viewModel.FormItem = value;
        }
    }
}
